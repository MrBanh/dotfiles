# vim style tmux config
# Credits to: https://gist.github.com/tsl0922/d79fc1f8097dde660b34
# Place in ~/ folder -> activate tmux -> run `tmux source ~/.tmux.conf`

# use C-space as the prefix key
set-option -g prefix C-w
unbind-key C-w
set-option -g prefix C-Space
bind-key C-Space send-prefix

# window index start at 1, easier to prefix + number
set -g base-index 1 
set -g renumber-windows on

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vim key bindings in copy mode
setw -g mode-keys vi

# Address vim mode switching delay (http://superuser.com/a/252717/65504)
# set -sg escape-time 5

# mouse behavior
setw -g mouse on

set -g set-clipboard on

set-option -g default-terminal "${TERM}"
set -as terminal-features ",xterm-256color:RGB"

bind-key : command-prompt
bind-key r refresh-client

bind -r j resize-pane -D 1
bind -r k resize-pane -U 1
bind -r l resize-pane -R 1
bind -r h resize-pane -L 1

# Send keys to lazygit if in lazygit
is_lazygit="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?lazygit$'"

# smart pane switching with awareness of vim splits
## https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

bind-key -n 'C-h' if-shell "($is_lazygit) || ($is_vim)" { send-keys C-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n 'C-j' if-shell "($is_lazygit) || ($is_vim)" { send-keys C-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n 'C-k' if-shell "($is_lazygit) || ($is_vim)" { send-keys C-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n 'C-l' if-shell "($is_lazygit) || ($is_vim)" { send-keys C-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }
bind-key -T copy-mode-vi 'C-h' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi 'C-j' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi 'C-k' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi 'C-l' if-shell -F '#{pane_at_right}'  {} { select-pane -R }

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key c kill-pane
bind-key n new-window

# Change pane layout
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

# Copy/paste-buffer mode
unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode when dragging with mouse
bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500

set-option -g focus-events on

# Status Bar
set-option -g status-interval 5

# Set window notifications
setw -g monitor-activity off

# Pass through image preview
set -gq allow-passthrough on
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM
set -g visual-activity off

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
set -g @resurrect-capture-pane-contents 'on'

set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes
set -g @continuum-restore 'on'

set -g @plugin 'tmux-plugins/tmux-yank'
bind -T copy-mode    C-c send -X copy-pipe-no-clear "xsel -i --clipboard"
bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xsel -i --clipboard"

# TMUX UI
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tmux-cpu'

## Configure Catppuccin
set -g @catppuccin_flavor "mocha"
set -g @catppuccin_status_background "none"
set -g @catppuccin_window_status_style 'custom'
set -ogq @catppuccin_pane_active_border_style "##{?pane_in_mode,fg=#{@thm_yellow},##{?pane_synchronized,fg=#{@thm_yellow},fg=#{@thm_yellow}}}"

## Window status
set -g @catppuccin_window_number ""
set -g @catppuccin_window_current_number ""
set -g @catppuccin_window_text "#[bg=default,fg=#{@thm_peach}]#{?#{!=:#{window_name},}, #I #W,} "
set -g @catppuccin_window_current_text "#[bg=default,fg=#{@thm_peach} bold blink] #{?#{!=:#{window_name},},\[#I #W\],} "

## status left look and feel
set -g status-left-length 100
set -g status-left " "
set -ga status-left "#{?client_prefix,#[fg=#{@thm_red}]󰇘 PREFIX,#{?#{==:#{pane_mode},copy-mode},#[fg=#{@thm_yellow}] COPY  ,#[fg=#{@thm_blue} blink]█ #[noblink]NORMAL}}"
set -ga status-left "#[bg=default,fg=#{@thm_green}]  #{pane_current_command}"
set -ga status-left "#[bg=default,fg=#{@thm_maroon}]  #S"
set -ga status-left "#[bg=default,fg=#{@thm_peach}] "

## status right look and feel
set -g status-right-length 100
set -g status-right ""
set -ga status-right "#[bg=default,fg=#{@thm_maroon}]#{?cpu_percentage,  #{cpu_percentage}, }"
set -ga status-right "#[bg=default,fg=#{@thm_green}]#{?ram_percentage,  #{ram_percentage}, }"
set -ga status-right "#[bg=default,fg=#{@thm_blue}]#{?gpu_percentage,  #{gpu_percentage}, }"

## Configure Tmux
set -g status-position top
set -g status-justify "left"

## Add padding to top of status
if -F '#{!=:#{status},2}' {
    set -Fg 'status-format[1]' '#{status-format[0]}'
    set -g 'status-format[0]' ''
    set -g status 2
}

## pane border look and feel
set -g pane-border-status top
set -g pane-border-format ""
set -g pane-border-lines single
set -g pane-border-indicators both

## window look and feel
set -wg automatic-rename on
set -g automatic-rename-format "Window"

# Initialize TMUX plugin manager (keep the run line at the very bottom of tmux.conf)
set -g @plugin 'tmux-plugins/tpm'
run '~/.tmux/plugins/tpm/tpm'
